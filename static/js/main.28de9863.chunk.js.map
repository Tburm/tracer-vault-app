{"version":3,"sources":["utils/constants.js","helpers/Web3ModalSetup.js","components/Navbar/index.js","components/NotLoaded/index.js","utils/springs.js","components/StakingInterface/index.js","components/WithdrawaInterface/index.js","pages/Landing.js","hooks/useAccount.js","data/abis.js","App.js","reportWebVitals.js","index.js"],"names":["INFURA_ID","web3ModalSetup","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","shortenAccount","account","slice","length","Navbar","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","className","src","alt","cachedProvider","OverlayTrigger","trigger","rootClose","placement","overlay","onClick","id","type","NotLoaded","chainInfo","provider","request","method","params","chainId","fadeIn","from","opacity","to","config","slow","StakingInterface","props","useState","depositAmount","setDepositAmount","title","Form","Nav","variant","parseFloat","toFixed","Control","placeholder","value","disabled","onChange","event","target","newAmount","tokenBalance","WithdrawalInterface","withdrawalAmount","setWithdrawalAmount","Landing","accountBalance","setAccountBalance","useEffect","a","library","getBalance","newBalance","ethers","utils","formatEther","addresses","useAccount","styles","useSpring","div","style","abis","Web3ModalSetup","chainReducer","state","action","App","useReducer","undefined","setChainInfo","block","setBlock","clearCachedProvider","disconnect","setTimeout","window","location","reload","useCallback","getAddress","getChainId","onBlock","newProvider","blockNumber","getNetwork","getSigner","signer","newAccount","connect","toggleModal","console","error","providers","Web3Provider","on","chainInfoProvider","newAccounts","allAddresses","toString","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DAppProvider","multicallAddresses","document","getElementById"],"mappings":"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","file":"static/js/main.28de9863.chunk.js","sourcesContent":["const MAX_APPROVAL = '115792089237316195423570985008687907853269984665640564039457584007913129639935';\nconst INFURA_ID = '1dc03bb35a274a3c918f23a0646bcd23';\n\nexport {\n    MAX_APPROVAL,\n    INFURA_ID\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { INFURA_ID } from \"../utils/constants\";\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3ModalSetup = () =>\n    new Web3Modal({\n        network: \"mainnet\",\n        cacheProvider: true,\n        providerOptions: {\n            walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                    infuraId: INFURA_ID,\n                    rpc: {\n                        1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n                        137: \"https://polygon-rpc.com\",\n                        80001: `https://polygon-mumbai.infura.io/v3/${INFURA_ID}`\n                    },\n                },\n            },\n        },\n    });\n\nexport default web3ModalSetup;","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n\nfunction shortenAccount(account) {\n  return account ? account.slice(0, 4) + \"...\" + account.slice(account.length-4, account.length) : \"\"\n}\n\nfunction Navbar({\n  account,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal\n}) {\n  return (\n    <div className=\"mt-2 mb-4 px-4 flex flex-row items-center justify-between\">\n      <div className=\"flex flex-col items-center\">\n        <img className=\"h-12\" src='./images/logo.png' alt=\"logo\" />\n      </div>\n\n      <div>\n        {web3Modal &&\n          (web3Modal?.cachedProvider ? (\n            <div className='flex flex-row'>\n              <OverlayTrigger\n                trigger=\"click\"\n                rootClose\n                placement=\"bottom\"\n                overlay={\n                  <button className=\"disconnect-btn mt-2\" onClick={logoutOfWeb3Modal}>Disconnect</button>\n                }\n              >\n                <div className=\"connect-btn mr-1 flex flex-row items-center\" id=\"account-display\">\n                  <p className=\"mr-2\">{shortenAccount(account)}</p>\n                </div>\n              </OverlayTrigger>\n            </div>\n          ) : (\n            <button type=\"button\" className=\"connect-btn\" onClick={loadWeb3Modal}>Connect Wallet</button>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react'\n\nfunction NotLoaded({ loadWeb3Modal, chainInfo }) {\n    function handleSwitchArb() {\n        if (chainInfo?.provider) {\n            chainInfo.provider.provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: \"0xA4B1\" }]\n            })\n            loadWeb3Modal()\n        }\n    }\n\n    return (\n        <div className=\"flex flex-col items-center w-full\">\n            <div className=\"flex flex-col items-center py-6 w-2/5 border-2 border-white mt-2 px-4 max-w-3xl rounded-lg shadow-md text-center\">\n                <p className=\"text-center\">Connect your wallet to Arbitrum mainnet</p>\n                {chainInfo?.provider &&\n                    <div className='flex flex-row items-center'>\n                        <p className=\"switch-btn text-xs mx-1 mt-4\" onClick={handleSwitchArb} >Switch to Arbitrum</p>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NotLoaded;\n","import { config } from \"react-spring\";\n\nconst fadeIn = {\n    from: {\n        opacity: 0\n    },\n    to: {\n        opacity: 1\n    },\n    config: config.slow\n}\n\nexport {\n    fadeIn\n}","import React, { useState } from 'react';\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form';\n\nfunction StakingInterface(props) {\n  let [depositAmount, setDepositAmount] = useState('');\n\n  // check if approved\n//   const isApproved = props.tokenApproval && (depositAmount <= props.tokenApproval)\n\n  const handleDepositAmountChange = (event) => {\n    // handle blank\n    if (event.target.value === '') setDepositAmount('')\n\n    // handle number\n    let newAmount = parseFloat(event.target.value)\n    if(newAmount <= props.tokenBalance) {\n      setDepositAmount(newAmount)\n    } else {\n      // throw an error\n    }\n  }\n\n  function handleDepositMax() {\n    setDepositAmount(props.tokenBalance)\n  }\n\n  return (\n    <>\n      <div className=\"flex flex-col items-center py-6 w-2/5 border-2 border-white mx-2 mt-2 px-4 max-w-3xl rounded-lg shadow-md text-center\">\n        <p className=\"text-2xl\">\n          {props.title}\n        </p>\n        <div className=\"flex flex-col items-center w-full px-8\">\n          <Form className=\"flex flex-col items-center w-full\">\n            <Nav\n              className=\"w-full mt-2 mb-2 grid grid-cols-2 gap-1 text-center\"\n              variant=\"pills\"\n            >\n            </Nav>\n\n            <div className=\"w-full mb-2\">\n              <p className=\"text-sm text-right\">\n                Balance: {parseFloat(0.00).toFixed(2)}\n              </p>\n              <div className=\"flex flex-row items-center\">\n                <Form.Control placeholder=\"0.0\" value={depositAmount} disabled={false} onChange={handleDepositAmountChange} />\n                <p className=\"text-sm -ml-8 hover:underline cursor-pointer unselectable\" onClick={handleDepositMax} >Max</p>\n              </div>\n            </div>\n            <button type=\"button\" className=\"connect-btn text-center my-2 w-full\">Deposit</button>\n          </Form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default StakingInterface;","import React, { useState } from 'react';\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form';\n\nfunction WithdrawalInterface(props) {\n  let [withdrawalAmount, setWithdrawalAmount] = useState('');\n\n  // check if approved\n//   const isApproved = props.tokenApproval && (withdrawalAmount <= props.tokenApproval)\n\n  const handleWithdrawalAmountChange = (event) => {\n    // handle blank\n    if (event.target.value === '') setWithdrawalAmount('')\n\n    // handle number\n    let newAmount = parseFloat(event.target.value)\n    if(newAmount <= props.tokenBalance) {\n      setWithdrawalAmount(newAmount)\n    } else {\n      // throw an error\n    }\n  }\n\n  function handleWithdrawalMax() {\n    setWithdrawalAmount(props.tokenBalance)\n  }\n\n  return (\n    <>\n      <div className=\"flex flex-col items-center py-6 w-2/5 border-2 border-white mx-2 mt-2 px-4 max-w-3xl rounded-lg shadow-md text-center\">\n        <p className=\"text-2xl\">\n          {props.title}\n        </p>\n        <div className=\"flex flex-col items-center w-full px-8\">\n          <Form className=\"flex flex-col items-center w-full\">\n            <Nav\n              className=\"w-full mt-2 mb-2 grid grid-cols-2 gap-1 text-center\"\n              variant=\"pills\"\n            >\n            </Nav>\n\n            <div className=\"w-full mb-2\">\n              <p className=\"text-sm text-right\">\n                Balance: {parseFloat(0.00).toFixed(2)}\n              </p>\n              <div className=\"flex flex-row items-center\">\n                <Form.Control placeholder=\"0.0\" value={withdrawalAmount} disabled={false} onChange={handleWithdrawalAmountChange} />\n                <p className=\"text-sm -ml-8 hover:underline cursor-pointer unselectable\" onClick={handleWithdrawalMax} >Max</p>\n              </div>\n            </div>\n            <button type=\"button\" className=\"connect-btn text-center my-2 w-full\">Withdraw</button>\n          </Form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default WithdrawalInterface;","import React, { useState } from 'react';\nimport { fadeIn } from '../utils/springs';\nimport { useSpring, animated } from \"react-spring\";\n\n// components\n// import MintButton from '../components/MintButton'\n\n// hooks\nimport { useAccount } from '../hooks/useAccount'\nimport StakingInterface from '../components/StakingInterface';\nimport WithdrawalInterface from '../components/WithdrawaInterface';\n\nfunction Landing(props) {\n  const [accountBalance] = useAccount(props);\n\n  // show states\n  const styles = useSpring(fadeIn)\n  if(props.addresses) {\n    const loaded = accountBalance >= 0\n    if(loaded) {\n      return (\n        <>\n        <animated.div style={styles} className=\"flex flex-row items-center justify-center\">\n          <div className=\"px-6 md:px-12 lg:px-24 flex flex-col items-center justify-center\">\n          </div>\n          <StakingInterface/>\n          <WithdrawalInterface/>\n        </animated.div>\n        </>\n      )\n    } else {\n      return (\n        <p className=\"w-full text-center\">Loading...</p>\n      )\n    }\n  } else {\n    return (\n      <></>\n    )\n  }\n}\n\nexport default Landing;\n","import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction useAccount(props) {\n    const [accountBalance, setAccountBalance] = useState();\n\n    useEffect(() => {\n        async function getBalance() {\n            var newBalance = await props.library.getBalance(props.account)\n            newBalance = ethers.utils.formatEther(newBalance)\n            setAccountBalance(newBalance)\n        }\n\n        if (props.addresses) {\n            getBalance()\n        }\n    }, [props])\n    return [accountBalance]\n}\n\nexport {\n    useAccount\n}\n","import SniperNFT from \"./abis/SniperNFT.json\";\n\nconst abis = {\n  \"sniperNFT\": SniperNFT\n};\n\nexport default abis;\n","import React, { useEffect, useState, useReducer, useCallback } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { ethers } from 'ethers';\n\n// web3modal helpers\nimport { Web3ModalSetup } from \"./helpers\";\n\n// styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// components\nimport Navbar from './components/Navbar'\nimport NotLoaded from './components/NotLoaded'\n\n\n// pages\nimport { Landing } from './pages'\n\n// data\nimport allAddresses from \"./data/addresses.json\";\nimport abis from \"./data/abis.js\";\n\nconst web3Modal = Web3ModalSetup();\n\nfunction getAddresses(chainId) {\n  return chainId && allAddresses[chainId.toString()] ? allAddresses[chainId.toString()] : undefined\n}\n\nfunction chainReducer(state, action) {\n  var newState;\n  if(action.type === \"account\") {\n    newState = {\n      ...state,\n      account: action.account,\n      provider: action.provider\n    }\n  } else if(action.type === \"chain\") {\n    newState = {\n      ...state,\n      chainId: action.chainId,\n      provider: action.provider\n    }\n  } else {\n    newState = {\n      account: action.account,\n      chainId: action.chainId,\n      provider: action.provider\n    }\n  }\n  return newState\n}\n\nfunction App(props) {\n  const [chainInfo, setChainInfo] = useReducer(\n    chainReducer,\n    {\n      account: undefined,\n      chainId: undefined,\n      provider: undefined\n    }\n  )\n  const [block, setBlock] = useState()\n  \n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (chainInfo.provider && chainInfo.provider.provider && typeof chainInfo.provider.provider.disconnect == \"function\") {\n      await chainInfo.provider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  const loadWeb3Modal = useCallback(async () => {\n    async function getAddress(provider) {\n      if (provider) {\n        const signer = await provider.getSigner()\n        const newAccount = await signer.getAddress()\n        return newAccount\n      }\n    }\n\n    async function getChainId(provider) {\n      if (provider) {\n        const network = await provider.getNetwork()\n        return network.chainId\n      }\n    }\n\n    async function onBlock() {\n      setBlock(newProvider.blockNumber)\n    }\n\n    var provider;\n    try {\n      provider = await web3Modal.connect();\n      await web3Modal.toggleModal();\n    } catch (err) {\n      console.error(err)\n      return\n    }\n    const newProvider = new ethers.providers.Web3Provider(provider)\n    newProvider.on('block', onBlock)\n    setChainInfo({\n      type: \"all\",\n      account: await getAddress(newProvider),\n      chainId: await getChainId(newProvider),\n      provider: newProvider\n    })\n\n\n    provider.on(\"chainChanged\", async (chainId) => {\n      const chainInfoProvider = new ethers.providers.Web3Provider(provider)\n      setChainInfo({\n        type: \"chain\",\n        chainId: await getChainId(chainInfoProvider),\n        provider: chainInfoProvider\n      })\n    });\n\n    provider.on(\"accountsChanged\", async (newAccounts) => {\n      const chainInfoProvider = new ethers.providers.Web3Provider(provider)\n      setChainInfo({\n        type: \"account\",\n        account: await getAddress(chainInfoProvider),\n        provider: chainInfoProvider\n      })\n    });\n  }, [setChainInfo]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  // constants\n  const addresses = getAddresses(chainInfo.chainId)\n\n  return (\n    <div id=\"app\">\n      <div className=\"relative\" id=\"content\">\n        <Router>\n          <Navbar\n            account={chainInfo.account}\n            chainId={chainInfo.chainId}\n            web3Modal={web3Modal}\n            loadWeb3Modal={loadWeb3Modal}\n            logoutOfWeb3Modal={logoutOfWeb3Modal}\n            addresses={addresses}\n          />\n          <Switch>\n            <Route exact path=\"/\">\n              <Landing\n                account={chainInfo.account}\n                chainId={chainInfo.chainId}\n                library={chainInfo.provider}\n                block={block}\n                abis={abis}\n                addresses={addresses}\n              />\n            </Route>\n          </Switch>\n        </Router>\n        {!addresses ? <NotLoaded loadWeb3Modal={loadWeb3Modal} chainInfo={chainInfo}/> : <></>}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DAppProvider } from '@usedapp/core'\n\nconst config = {\n  multicallAddresses: {\n    31337: \"0x2909280299c58268d5faed54074823eafbb436e8\"\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={config}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}